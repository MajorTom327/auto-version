"use strict";var e=require("@actions/core"),t=require("@actions/github/lib/context"),r=require("ramda"),o=require("@actions/github"),a=require("@technote-space/github-action-helper"),n=require("ramda-adjunct"),c=require("ts-pattern"),s=require("fs-extra"),i=require("@technote-space/github-action-log-helper");function p(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(r){if("default"!==r){var o=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,o.get?o:{enumerable:!0,get:function(){return e[r]}})}})),t.default=e,Object.freeze(t)}var g=p(s);class h{octokit;context;logger;constructor(t,r){const a=c.match(process.env.NODE_ENV).with("production",(()=>e.getInput("token"))).otherwise((()=>process.env.GITHUB_TOKEN));this.octokit=o.getOctokit(a,{timeZone:"Canada/Vancouver"}),this.context=t,this.logger=r}async getLatestVersion(e){const[t,o]=e.split("/");return this.octokit.rest.packages.getAllPackageVersionsForPackageOwnedByAuthenticatedUser({package_type:"npm",package_name:o}).then((e=>e)).catch((e=>this.octokit.rest.packages.getAllPackageVersionsForPackageOwnedByOrg({org:t,package_type:"npm",package_name:o}))).then((e=>r.compose(r.head,n.sortByProps(["major","minor","patch"]),r.map(r.applySpec({major:r.compose(parseInt,r.nth(0),r.split(".")),minor:r.compose(parseInt,r.nth(1),r.split(".")),patch:r.compose(parseInt,r.nth(2),r.split("."))})),r.map(r.propOr("0.0.0","name")),r.propOr([],"data"))(e)))}async commit(e){const t=new a.ApiHelper(this.octokit,this.context,this.logger,{refForUpdate:"heads/main",suppressBPError:!0});await t.commit(".",`🏷️ Update version to ${e}`,["package.json"])}}(async()=>{const e=new t.Context,o=new i.Logger,a=new h(e,o),n=r.compose(r.join("/"),r.props(["owner","repo"]))(e.repo),c=await a.getLatestVersion(n),s=r.compose(r.join("."),r.props(["major","minor","patch"]),r.evolve({patch:r.inc}))(c);g.readFile("./package.json","utf8").then((e=>r.assoc("version",s,JSON.parse(e)))).then((e=>g.writeFile("./package.json",JSON.stringify(e)))).then((()=>{}))})().catch((t=>{e.setFailed(t.message)}));
